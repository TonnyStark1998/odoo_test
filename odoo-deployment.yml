apiVersion: v1
kind: Namespace
metadata:
  name: odoo-dev
---
apiVersion: v1
kind: Secret
metadata:
  name: azure-file-credentials
  namespace: odoo-dev
type: Opaque
stringData:
  azurestorageaccountname: kubernetessa
  azurestorageaccountkey: 5NF23Auu5yjuSe1hezZjUuXF4rlnraQTn7ukHaXNC7nPQtr0RX/nJ0rKGBoMFf/Q5l6a3pISOp45+AStJ1BZJg==
---
#################################
#            Storage            #
#################################
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: azurefile-csi-retain
# provisioner: file.csi.azure.com
# parameters:
#   subscriptionID: 0ccb7c41-ce07-4abe-92a4-84acb41d5d6f  # optional, only set this when storage account is not in the same subscription as agent node
#   resourceGroup: kubernetes-test  # optional, only set this when storage account is not in the same resource group as agent node
#   storageAccount: kubernetessa
#   shareName: kubernetes-fs
#   csi.storage.k8s.io/provisioner-secret-name: azure-file-credentials
#   csi.storage.k8s.io/provisioner-secret-namespace: odoo-dev
#   csi.storage.k8s.io/node-stage-secret-name: azure-file-credentials
#   csi.storage.k8s.io/node-stage-secret-namespace: odoo-dev
#   csi.storage.k8s.io/controller-expand-secret-name: azure-file-credentials
#   csi.storage.k8s.io/controller-expand-secret-namespace: odoo-dev
# reclaimPolicy: Retain
# volumeBindingMode: Immediate
# mountOptions:
#   - mfsymlinks
#   - cache=strict  # https://linux.die.net/man/8/mount.cifs
#   - nosharesock  # reduce probability of reconnect race
#   - actimeo=30  # reduce latency for metadata-heavy workload
# ---
#################################
#           Postgres            #
#################################
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: file.csi.azure.com
  name: postgres-data-pv
  namespace: odoo-dev
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: azurefile-csi
  csi:
    driver: file.csi.azure.com
    volumeHandle: >-
      kubernetes-test#kubernetessa#postgres-data-fs###odoo-dev
    volumeAttributes:
      storageAccount: kubernetessa
      shareName: postgres-data-fs
    nodeStageSecretRef:
      name: azure-file-credentials
      namespace: odoo-dev
  mountOptions:
    - mfsymlinks
    - cache=strict
    - nosharesock
    - nobrl
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-data-pvc
  namespace: odoo-dev
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
  volumeName: postgres-data-pv
  storageClassName: azurefile-csi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: odoo-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:16
        resources:
          limits:
            memory: "256Mi"
            cpu: "100m"
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_USER
            value: usr_odoo
          - name: POSTGRES_PASSWORD
            value: Q37zfHgsswMnYQnKPZG4XQ5p
          - name: PGDATA
            value: /var/lib/postgresql/accounterprise-ce/data
        volumeMounts:
        - mountPath: "/var/lib/postgresql"
          name: postgres-data-v
          readOnly: false
      volumes:
      - name: postgres-data-v
        persistentVolumeClaim:
          claimName: postgres-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: odoo-dev
  labels:
    app: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
  - port: 15401
    targetPort: 5432
---
#################################
#             Odoo              #
#################################
apiVersion: v1
kind: PersistentVolume
metadata:
  annotations:
    pv.kubernetes.io/provisioned-by: file.csi.azure.com
  name: odoo-data-pv
  namespace: odoo-dev
spec:
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: azurefile-csi
  csi:
    driver: file.csi.azure.com
    volumeHandle: >-
      kubernetes-test#kubernetessa#odoo-data-fs###odoo-dev
    volumeAttributes:
      storageAccount: kubernetessa
      shareName: odoo-data-fs
      folderName: accounterprise-ce
    nodeStageSecretRef:
      name: azure-file-credentials
      namespace: odoo-dev
  mountOptions:
    - dir_mode=0777
    - file_mode=0777
    - uid=0
    - gid=0
    - mfsymlinks
    - cache=strict
    - nosharesock
    - nobrl
  volumeMode: Filesystem
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: odoo-data-pvc
  namespace: odoo-dev
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 5Gi
  volumeName: odoo-data-pv
  storageClassName: azurefile-csi
  volumeMode: Filesystem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: odoo-deployment
  namespace: odoo-dev
spec:
  selector:
    matchLabels:
      app: odoo
  template:
    metadata:
      labels:
        app: odoo
    spec:
      containers:
      - name: odoo
        image: odoo:16.0
        resources:
          limits:
            memory: "512Mi"
            cpu: "200m"
        ports:
        - containerPort: 8069
        env:
          - name: HOST
            value: postgres-service
          - name: PORT
            value: "15401"
          - name: USER
            value: usr_odoo
          - name: PASSWORD
            value: Q37zfHgsswMnYQnKPZG4XQ5p
        volumeMounts:
          - mountPath: "/var/lib/odoo"
            name: odoo-data-v
            readOnly: false
      volumes:
        - name: odoo-data-v
          persistentVolumeClaim:
            claimName: odoo-data-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: odoo-service
  namespace: odoo-dev
spec:
  type: LoadBalancer
  selector:
    app: odoo
  ports:
  - port: 19801
    targetPort: 8069
